.TH "config_load.cpp" 3 "Sun Jan 15 2017" "Version 2.1.0" "TenTen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
config_load.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'config_load\&.h'\fP
.br
\fC#include 'color\&.h'\fP
.br
\fC#include 'global_log\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBblank_only\fP (const std::string &str)"
.br
.RI "Check if a the string contain only blanck caracters\&. "
.ti -1c
.RI "size_t \fBcount_occurences\fP (const std::string &input, const std::string &ch)"
.br
.RI "Count occurences of any of the characters in a string\&. "
.ti -1c
.RI "size_t \fBcount_occurences\fP (const std::string &input, const char *ch)"
.br
.RI "Count occurences of any of the characters in a string\&. "
.ti -1c
.RI "size_t \fBcount_occurences\fP (const std::string &input, const char *ch, size_t n)"
.br
.RI "Count occurences of any of the characters in a string\&. "
.ti -1c
.RI "size_t \fBcount_occurences\fP (const std::string &input, char ch)"
.br
.RI "Count occurences of any of the characters in a string\&. "
.ti -1c
.RI "void \fBclean_config_input\fP (std::string &input)"
.br
.RI "Standard config input cleaning function\&. "
.ti -1c
.RI "std::string \fBgetword\fP (std::string &input)"
.br
.RI "Get a word at the begining of a string then remove it\&. "
.ti -1c
.RI "std::string \fBgetline\fP (std::string &input)"
.br
.RI "Get a line at the begining of a string then remove it\&. "
.ti -1c
.RI "std::string \fBgetblock\fP (std::string &input, size_t *line)"
.br
.RI "Get a block between '{' and '}'\&. "
.ti -1c
.RI "bool \fBget_key_value\fP (const std::string &input, std::string &key, std::string &value)"
.br
.RI "Search a title\&. "
.ti -1c
.RI "void \fBset_case\fP (std::string &str, bool lower)"
.br
.RI "Convert a string to all UPPER / lower case\&. "
.ti -1c
.RI "int \fBword_to_color\fP (const std::string &input)"
.br
.ti -1c
.RI "std::string \fBcolor_to_word\fP (int color)"
.br
.RI "Convert a color code to its corresponding name\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool blank_only (const std::string &)"

.PP
Check if a the string contain only blanck caracters\&. 
.PP
\fBReturns:\fP
.RS 4
true if string contain only spaces, tabs and newlines 
.RE
.PP

.PP
Definition at line 25 of file config_load\&.cpp\&.
.SS "void clean_config_input (std::string & input)"

.PP
Standard config input cleaning function\&. Remove blank (space, tab and newline) at the begining and the end\&. Then replace any sequence of blank by a single space
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string to clean 
.RE
.PP

.PP
Definition at line 71 of file config_load\&.cpp\&.
.SS "std::string color_to_word (int code)"

.PP
Convert a color code to its corresponding name\&. Color names will be one following : BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE\&.
.PP
\fBParameters:\fP
.RS 4
\fIcode\fP : The color's code
.RE
.PP
\fBReturns:\fP
.RS 4
The color's corresponding name 
.RE
.PP

.PP
Definition at line 217 of file config_load\&.cpp\&.
.SS "size_t count_occurences (const std::string & input, const std::string & ch)"

.PP
Count occurences of any of the characters in a string\&. Character set (second argument) is passed as in string::find_first_of()
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where to search 
.br
\fIch\fP : The caracter to search
.RE
.PP
\fBReturns:\fP
.RS 4
Number of occurences 
.RE
.PP

.PP
Definition at line 30 of file config_load\&.cpp\&.
.SS "size_t count_occurences (const std::string & input, const char * ch)"

.PP
Count occurences of any of the characters in a string\&. Character set (second argument) is passed as in string::find_first_of()
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where to search 
.br
\fIch\fP : The caracter to search
.RE
.PP
\fBReturns:\fP
.RS 4
Number of occurences 
.RE
.PP

.PP
Definition at line 40 of file config_load\&.cpp\&.
.SS "size_t count_occurences (const std::string & input, const char * ch, size_t)"

.PP
Count occurences of any of the characters in a string\&. Character set (second argument) is passed as in string::find_first_of()
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where to search 
.br
\fIch\fP : The caracter to search 
.br
\fIn\fP : Number of character values to search for
.RE
.PP
\fBReturns:\fP
.RS 4
Number of occurences 
.RE
.PP

.PP
Definition at line 50 of file config_load\&.cpp\&.
.SS "size_t count_occurences (const std::string & input, char ch)"

.PP
Count occurences of any of the characters in a string\&. Character set (second argument) is passed as in string::find_first_of()
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where to search 
.br
\fIch\fP : The caracter to search
.RE
.PP
\fBReturns:\fP
.RS 4
Number of occurences 
.RE
.PP

.PP
Definition at line 60 of file config_load\&.cpp\&.
.SS "bool get_key_value (const std::string & input, std::string & key, std::string & value)"

.PP
Search a title\&. Look for the sequence ' : ' in a string If the sequence is found, set key to the first part (before : ) and value to the second (after : ) and return true\&. If not, return false\&. If value is empty, second space is optional\&. Only the first ' : ' is considered\&.
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where search for the sequence ':' 
.br
\fIline\fP : The keyword that describe the sequence find 
.br
\fIvalue\fP : The sequence value
.RE
.PP
\fBReturns:\fP
.RS 4
True is the sequence has been found 
.RE
.PP

.PP
Definition at line 157 of file config_load\&.cpp\&.
.SS "std::string getblock (std::string & input, size_t * line = \fCnullptr\fP)"

.PP
Get a block between '{' and '}'\&. Before first '{' shall only be blank\&. Return the block and remove it as well as { } from input\&. Line is set to the number of lines removed from input
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where extract the block 
.br
\fIline\fP : The number of line extracted (ie\&. block's size)
.RE
.PP
\fBReturns:\fP
.RS 4
The block extracted 
.RE
.PP

.PP
Definition at line 123 of file config_load\&.cpp\&.
.SS "std::string getline (std::string &)"

.PP
Get a line at the begining of a string then remove it\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where extract the 1st line
.RE
.PP
\fBReturns:\fP
.RS 4
The extracted line 
.RE
.PP

.PP
Definition at line 110 of file config_load\&.cpp\&.
.SS "std::string getword (std::string & input)"

.PP
Get a word at the begining of a string then remove it\&. A word is the group of caracters from begining to the first blank\&. The blank is removed as well, it is designed for use on string cleaned with clean_config_input\&.
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP : The string where extract the 1st word
.RE
.PP
\fBReturns:\fP
.RS 4
The extracted word 
.RE
.PP

.PP
Definition at line 97 of file config_load\&.cpp\&.
.SS "void set_case (std::string & str, bool lower = \fCfalse\fP)"

.PP
Convert a string to all UPPER / lower case\&. By default it convert to lower\&.
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP : The string to convert 
.br
\fIlower\fP : Case wanted 
.RE
.PP

.PP
Definition at line 179 of file config_load\&.cpp\&.
.SS "int word_to_color (const std::string & input)"

.PP
Definition at line 199 of file config_load\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TenTen from the source code\&.
