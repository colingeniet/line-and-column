<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="global__log_8cpp" kind="file" language="C++">
    <compoundname>global_log.cpp</compoundname>
    <includes refid="global__log_8h" local="yes">global_log.h</includes>
    <incdepgraph>
      <node id="136">
        <label>global_log.h</label>
        <link refid="global__log_8h"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>fstream</label>
      </node>
      <node id="137">
        <label>iostream</label>
      </node>
      <node id="135">
        <label>global_log.cpp</label>
        <link refid="global__log_8cpp"/>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="global__log_8cpp_1a70a750a49dcab5d93e67d4776207e1d0" prot="public" static="no" mutable="no">
        <type><ref refid="classglobal_log" kindref="compound">globalLog</ref></type>
        <definition>globalLog mlog</definition>
        <argsstring></argsstring>
        <name>mlog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="global_log.cpp" line="4" column="1" bodyfile="global_log.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="global__log_8h" kindref="compound">global_log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="global__log_8h_1a70a750a49dcab5d93e67d4776207e1d0" refkind="member"><highlight class="normal"><ref refid="classglobal_log" kindref="compound">globalLog</ref><sp/><ref refid="global__log_8cpp_1a70a750a49dcab5d93e67d4776207e1d0" kindref="member">mlog</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classglobal_log_1a773588391d5e6593678e98b22c30529f" refkind="member"><highlight class="normal"><ref refid="classglobal_log_1a773588391d5e6593678e98b22c30529f" kindref="member">globalLog::globalLog</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file)<sp/>log_file.open(file);</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classglobal_log_1aef6cc5f9b3bec75f838d7721397b9338" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1aef6cc5f9b3bec75f838d7721397b9338" kindref="member">globalLog::setfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_file.is_open())<sp/>log_file.close();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file)<sp/>log_file.open(file);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classglobal_log_1a45da7f9fb32a7d4319e3e2255769a24e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1a45da7f9fb32a7d4319e3e2255769a24e" kindref="member">globalLog::flush</ref>()<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_file.is_open())<sp/>log_file.flush();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classglobal_log_1a9ce3b2370f87b2645c4c50354c4d63fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1a9ce3b2370f87b2645c4c50354c4d63fa" kindref="member">globalLog::close</ref>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_file.is_open())<sp/>log_file.close();</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classglobal_log_1aa666c04b1c1429ab765c7313060d9e39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1aa666c04b1c1429ab765c7313060d9e39" kindref="member">globalLog::is_open</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log_file.is_open();</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classglobal_log_1a9fd368182e141dde5923ba8a6e559b3b" refkind="member"><highlight class="normal"><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">globalLog::operator&lt;&lt;</ref>(std::ostream&amp;<sp/>(*pf)(std::ostream&amp;))</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>pf;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_file.is_open())<sp/>log_file<sp/>&lt;&lt;<sp/>pf;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classglobal_log_1a8abfc695fe7cc6fd17112f5222482236" refkind="member"><highlight class="normal"><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">globalLog::operator&lt;&lt;</ref>(std::ios&amp;<sp/>(*pf)(std::ios&amp;))</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>pf;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_file.is_open())<sp/>log_file<sp/>&lt;&lt;<sp/>pf;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classglobal_log_1a390c36e15e827bcd6d10a66a9b882cae" refkind="member"><highlight class="normal"><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">globalLog::operator&lt;&lt;</ref>(std::ios_base&amp;<sp/>(*pf)(std::ios_base&amp;))</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>pf;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_file.is_open())<sp/>log_file<sp/>&lt;&lt;<sp/>pf;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="global_log.cpp"/>
  </compounddef>
</doxygen>
