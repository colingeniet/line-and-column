<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="class_option" kind="class" language="C++" prot="public">
    <compoundname>Option</compoundname>
    <includes refid="option_8h" local="no">option.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_option_1a4badabd24ee559b7b953eb68d578ba50" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Option::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_option" kindref="compound">Option</ref>&apos;s name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="100" column="1" bodyfile="option.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_option_1a17395196bbffe86b8f954af7f8a80928" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Option::shortcut</definition>
        <argsstring></argsstring>
        <name>shortcut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_option" kindref="compound">Option</ref>&apos;s shortcut </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="101" column="1" bodyfile="option.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_option_1a868a570c5632da8154e816bb25654892" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Option::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_option" kindref="compound">Option</ref>&apos;s value required </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="102" column="1" bodyfile="option.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_option_1a686af13adc828fe688e097c531816e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Option::Option</definition>
        <argsstring>(std::string _name, char _shortcut=0, bool _value=false)</argsstring>
        <name>Option</name>
        <param>
          <type>std::string</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>char</type>
          <declname>_shortcut</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>_value</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Create an option instance</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: <ref refid="class_option" kindref="compound">Option</ref>&apos;s name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_shortcut</parametername>
</parameternamelist>
<parameterdescription>
<para>: short character </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>: value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="42" column="1" bodyfile="option.cpp" bodystart="3" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="class_option_1ad820e2fb8cc07899ff9ab9cbd4bed8bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Option::getname</definition>
        <argsstring>() const</argsstring>
        <name>getname</name>
        <briefdescription>
<para>Accesor for the name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The otpion&apos;s name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="50" column="1" bodyfile="option.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_option_1a14aaf12f3338434a47f7b69547118505" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char Option::getshortcut</definition>
        <argsstring>() const</argsstring>
        <name>getshortcut</name>
        <briefdescription>
<para>Accesor for the shortcut. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The otpion&apos;s shortcut </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="57" column="1" bodyfile="option.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_option_1a5ac713700e6cf3fb87736af5c4388f2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Option::value_required</definition>
        <argsstring>() const</argsstring>
        <name>value_required</name>
        <briefdescription>
<para>Accesor for the value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The otpion&apos;s value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="64" column="1" bodyfile="option.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_option_1a2a850c15f77b6e7e512295fba20ead9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Option::setname</definition>
        <argsstring>(std::string _name)</argsstring>
        <name>setname</name>
        <param>
          <type>std::string</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
<para>Accesor for the name (writing) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: Name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="72" column="1" bodyfile="option.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_option_1a33f76f0cac38ae7bb7020d7e68cb68a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Option::setshortcut</definition>
        <argsstring>(char _sc)</argsstring>
        <name>setshortcut</name>
        <param>
          <type>char</type>
          <declname>_sc</declname>
        </param>
        <briefdescription>
<para>Accesor for the shortcut (writing) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_sc</parametername>
</parameternamelist>
<parameterdescription>
<para>: Shortcut character </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="79" column="1" bodyfile="option.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_option_1ab9ebb3871e3998d2d6ae7014606ad85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Option::require_value</definition>
        <argsstring>(bool _value)</argsstring>
        <name>require_value</name>
        <param>
          <type>bool</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>Accesor for the value (writing) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>: Value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="86" column="1" bodyfile="option.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_option_1a261ccd60f0317b0e7a37ebd25e79bc9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Option::match</definition>
        <argsstring>(const std::string &amp;argument, std::string *value_str=nullptr)</argsstring>
        <name>match</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>argument</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value_str</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Check if the argument match with this option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argument</parametername>
</parameternamelist>
<parameterdescription>
<para>: Argument tested </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>: Optional return string</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option match with arguments </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="97" column="1" bodyfile="option.cpp" bodystart="39" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_option" kindref="compound">Option</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>This class represent a unique option </para>    </detaileddescription>
    <location file="option.h" line="30" column="1" bodyfile="option.h" bodystart="29" bodyend="103"/>
    <listofallmembers>
      <member refid="class_option_1ad820e2fb8cc07899ff9ab9cbd4bed8bd" prot="public" virt="non-virtual"><scope>Option</scope><name>getname</name></member>
      <member refid="class_option_1a14aaf12f3338434a47f7b69547118505" prot="public" virt="non-virtual"><scope>Option</scope><name>getshortcut</name></member>
      <member refid="class_option_1a261ccd60f0317b0e7a37ebd25e79bc9a" prot="public" virt="non-virtual"><scope>Option</scope><name>match</name></member>
      <member refid="class_option_1a4badabd24ee559b7b953eb68d578ba50" prot="private" virt="non-virtual"><scope>Option</scope><name>name</name></member>
      <member refid="class_option_1a686af13adc828fe688e097c531816e58" prot="public" virt="non-virtual"><scope>Option</scope><name>Option</name></member>
      <member refid="class_option_1ab9ebb3871e3998d2d6ae7014606ad85e" prot="public" virt="non-virtual"><scope>Option</scope><name>require_value</name></member>
      <member refid="class_option_1a2a850c15f77b6e7e512295fba20ead9d" prot="public" virt="non-virtual"><scope>Option</scope><name>setname</name></member>
      <member refid="class_option_1a33f76f0cac38ae7bb7020d7e68cb68a7" prot="public" virt="non-virtual"><scope>Option</scope><name>setshortcut</name></member>
      <member refid="class_option_1a17395196bbffe86b8f954af7f8a80928" prot="private" virt="non-virtual"><scope>Option</scope><name>shortcut</name></member>
      <member refid="class_option_1a868a570c5632da8154e816bb25654892" prot="private" virt="non-virtual"><scope>Option</scope><name>value</name></member>
      <member refid="class_option_1a5ac713700e6cf3fb87736af5c4388f2a" prot="public" virt="non-virtual"><scope>Option</scope><name>value_required</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
