<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classsyntax__exception" kind="class" language="C++" prot="public">
    <compoundname>syntax_exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">exception</basecompoundref>
    <includes refid="config__load_8h" local="no">config_load.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsyntax__exception_1a8379028a54537f30ae8ccff845b6e609" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string syntax_exception::msg</definition>
        <argsstring></argsstring>
        <name>msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exception message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="config_load.h" line="67" column="1" bodyfile="config_load.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsyntax__exception_1a2ccff0e84e9b6f3543db285d7fd8ab0f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t syntax_exception::line</definition>
        <argsstring></argsstring>
        <name>line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exception line </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="config_load.h" line="68" column="1" bodyfile="config_load.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsyntax__exception_1a60278cf3cd3eba72c35f27ee36a21d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>syntax_exception::syntax_exception</definition>
        <argsstring>()</argsstring>
        <name>syntax_exception</name>
        <briefdescription>
<para>Default exeption constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="config_load.h" line="35" column="1" bodyfile="config_load.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classsyntax__exception_1aff5164bb18c155255820187afa2215c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>syntax_exception::syntax_exception</definition>
        <argsstring>(const std::string &amp;detail, size_t line=(size_t) -1)</argsstring>
        <name>syntax_exception</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>detail</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>line</declname>
          <defval>(size_t) -1</defval>
        </param>
        <briefdescription>
<para>Exception constructor. </para>        </briefdescription>
        <detaileddescription>
<para>To create an exception message. A line can be specify if needed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>: Line where the exception as been lauched </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detail</parametername>
</parameternamelist>
<parameterdescription>
<para>: Exception message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="config_load.h" line="46" column="1" bodyfile="config_load.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classsyntax__exception_1a2a32f5e0c2acbbf37c10c9aa3d72506c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * syntax_exception::what</definition>
        <argsstring>() const</argsstring>
        <name>what</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Tell what happened. </para>        </briefdescription>
        <detaileddescription>
<para>If those functions throw an exception, something has gone horribly wrong !</para><para><simplesect kind="return"><para>A C string that contain the error message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="config_load.h" line="56" column="1" bodyfile="config_load.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classsyntax__exception_1aa25100b3e6601bb67aa5a5d1e76f508e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t syntax_exception::getline</definition>
        <argsstring>() const</argsstring>
        <name>getline</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Tell where it happened. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The line where error occurred </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="config_load.h" line="64" column="1" bodyfile="config_load.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Config class. </para>    </briefdescription>
    <detaileddescription>
<para>This class defines I/O from/to a confi. file and handle differents exeptions.</para><para>Exception class for file parsing syntax errors. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="14">
        <label>syntax_exception</label>
        <link refid="classsyntax__exception"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16">
        <label>syntax_exception</label>
        <link refid="classsyntax__exception"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="config_load.h" line="29" column="1" bodyfile="config_load.h" bodystart="29" bodyend="69"/>
    <listofallmembers>
      <member refid="classsyntax__exception_1aa25100b3e6601bb67aa5a5d1e76f508e" prot="public" virt="non-virtual"><scope>syntax_exception</scope><name>getline</name></member>
      <member refid="classsyntax__exception_1a2ccff0e84e9b6f3543db285d7fd8ab0f" prot="private" virt="non-virtual"><scope>syntax_exception</scope><name>line</name></member>
      <member refid="classsyntax__exception_1a8379028a54537f30ae8ccff845b6e609" prot="private" virt="non-virtual"><scope>syntax_exception</scope><name>msg</name></member>
      <member refid="classsyntax__exception_1a60278cf3cd3eba72c35f27ee36a21d68" prot="public" virt="non-virtual"><scope>syntax_exception</scope><name>syntax_exception</name></member>
      <member refid="classsyntax__exception_1aff5164bb18c155255820187afa2215c9" prot="public" virt="non-virtual"><scope>syntax_exception</scope><name>syntax_exception</name></member>
      <member refid="classsyntax__exception_1a2a32f5e0c2acbbf37c10c9aa3d72506c" prot="public" virt="non-virtual"><scope>syntax_exception</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
