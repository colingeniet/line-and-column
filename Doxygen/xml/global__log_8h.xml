<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="global__log_8h" kind="file" language="C++">
    <compoundname>global_log.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includedby refid="config__load_8cpp" local="yes">config_load.cpp</includedby>
    <includedby refid="game__window_8cpp" local="yes">game_window.cpp</includedby>
    <includedby refid="global__log_8cpp" local="yes">global_log.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="main__window_8cpp" local="yes">main_window.cpp</includedby>
    <includedby refid="menu__window_8cpp" local="yes">menu_window.cpp</includedby>
    <incdepgraph>
      <node id="140">
        <label>global_log.h</label>
        <link refid="global__log_8h"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>fstream</label>
      </node>
      <node id="141">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="147">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="143">
        <label>global_log.h</label>
        <link refid="global__log_8h"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>game_window.cpp</label>
        <link refid="game__window_8cpp"/>
      </node>
      <node id="148">
        <label>main_window.cpp</label>
        <link refid="main__window_8cpp"/>
      </node>
      <node id="144">
        <label>config_load.cpp</label>
        <link refid="config__load_8cpp"/>
      </node>
      <node id="146">
        <label>global_log.cpp</label>
        <link refid="global__log_8cpp"/>
      </node>
      <node id="149">
        <label>menu_window.cpp</label>
        <link refid="menu__window_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classglobal_log" prot="public">globalLog</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="global__log_8h_1a70a750a49dcab5d93e67d4776207e1d0" prot="public" static="no" mutable="no">
        <type><ref refid="classglobal_log" kindref="compound">globalLog</ref></type>
        <definition>globalLog mlog</definition>
        <argsstring></argsstring>
        <name>mlog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="global_log.h" line="138" column="1" bodyfile="global_log.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>!</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Game&apos;s<sp/>logs<sp/>class</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@author<sp/>Colin<sp/>Geniet</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>@version<sp/>2.1</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>@date<sp/>2016</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>debugging<sp/>class<sp/>that<sp/>can<sp/>be<sp/>use<sp/>to<sp/>fix<sp/>issues<sp/>by<sp/>creating<sp/>a<sp/>log<sp/>file.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>class<sp/>can<sp/>be<sp/>used<sp/>as<sp/>an<sp/>output<sp/>stream<sp/>that<sp/>both<sp/>print<sp/>to<sp/>cerr<sp/>and<sp/>to<sp/>a<sp/>log<sp/>file.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GLOBAL_LOG_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLOBAL_LOG_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classglobal_log" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classglobal_log" kindref="compound">globalLog</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classglobal_log_1a773588391d5e6593678e98b22c30529f" kindref="member">globalLog</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1aef6cc5f9b3bec75f838d7721397b9338" kindref="member">setfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file);<sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>of<sp/>null<sp/>is<sp/>equivalent<sp/>to<sp/>close()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1a45da7f9fb32a7d4319e3e2255769a24e" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1a9ce3b2370f87b2645c4c50354c4d63fa" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classglobal_log_1aa666c04b1c1429ab765c7313060d9e39" kindref="member">is_open</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>general<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type&amp;<sp/>obj);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>manipulators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>(*pf)(std::ostream&amp;));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">operator&lt;&lt;</ref>(std::ios&amp;<sp/>(*pf)(std::ios&amp;));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">operator&lt;&lt;</ref>(std::ios_base&amp;<sp/>(*pf)(std::ios_base&amp;));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>log_file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="130" refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" refkind="member"><highlight class="normal"><ref refid="classglobal_log" kindref="compound">globalLog</ref>&amp;<sp/><ref refid="classglobal_log_1a1a8d6920fb45109bba411cf678e1e502" kindref="member">globalLog::operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>&amp;obj)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>obj;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_file.is_open())<sp/>log_file<sp/>&lt;&lt;<sp/>obj;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>global<sp/>instance<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classglobal_log" kindref="compound">globalLog</ref><sp/><ref refid="global__log_8h_1a70a750a49dcab5d93e67d4776207e1d0" kindref="member">mlog</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>GLOBAL_LOG_H_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="global_log.h"/>
  </compounddef>
</doxygen>
