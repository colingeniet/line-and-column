<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="class_option_set" kind="class" language="C++" prot="public">
    <compoundname>OptionSet</compoundname>
    <includes refid="option_8h" local="no">option.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_option_set_1a58bf9ff5d0b6bc244e63596736699f4e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_option" kindref="compound">Option</ref> &gt;</type>
        <definition>std::vector&lt;Option&gt; OptionSet::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Options&apos;s array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="151" column="1" bodyfile="option.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_option_set_1a5a83cc35d74108a6302b893c616309ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OptionSet::add_option</definition>
        <argsstring>(const Option &amp;opt)</argsstring>
        <name>add_option</name>
        <param>
          <type>const <ref refid="class_option" kindref="compound">Option</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Add an option to the set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>: <ref refid="class_option" kindref="compound">Option</ref> to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="120" column="1" bodyfile="option.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_option_set_1a9355623ce41d8700f25f76476d0c8b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool OptionSet::find</definition>
        <argsstring>(const std::string &amp;argument, std::string *name_str, std::string *value_str)</argsstring>
        <name>find</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>argument</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>name_str</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value_str</declname>
        </param>
        <briefdescription>
<para>Check if the argument match with this option. </para>        </briefdescription>
        <detaileddescription>
<para>look for a matching option in the set. If found, name_str is set to the option full name, value_str to the value - if any - and it return true if not found, it return false.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argument</parametername>
</parameternamelist>
<parameterdescription>
<para>: Argument tested </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_str</parametername>
</parameternamelist>
<parameterdescription>
<para>: <ref refid="class_option" kindref="compound">Option</ref> found&apos;s name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>: Optional found&apos;s value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if an option match </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="137" column="1" bodyfile="option.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_option_set_1a1ce63868573b9592b217057bc95ba7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_option" kindref="compound">Option</ref> &amp;</type>
        <definition>const Option&amp; OptionSet::operator[]</definition>
        <argsstring>(size_t n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Accesor overloading. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>: <ref refid="class_option" kindref="compound">Option</ref> nÂ° n</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_option" kindref="compound">Option</ref> wanted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="option.h" line="148" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_option" kindref="compound">Option</ref> set class. </para>    </briefdescription>
    <detaileddescription>
<para>This class represent a set of options </para>    </detaileddescription>
    <location file="option.h" line="112" column="1" bodyfile="option.h" bodystart="111" bodyend="152"/>
    <listofallmembers>
      <member refid="class_option_set_1a5a83cc35d74108a6302b893c616309ca" prot="public" virt="non-virtual"><scope>OptionSet</scope><name>add_option</name></member>
      <member refid="class_option_set_1a9355623ce41d8700f25f76476d0c8b2d" prot="public" virt="non-virtual"><scope>OptionSet</scope><name>find</name></member>
      <member refid="class_option_set_1a1ce63868573b9592b217057bc95ba7bd" prot="public" virt="non-virtual"><scope>OptionSet</scope><name>operator[]</name></member>
      <member refid="class_option_set_1a58bf9ff5d0b6bc244e63596736699f4e" prot="private" virt="non-virtual"><scope>OptionSet</scope><name>options</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
